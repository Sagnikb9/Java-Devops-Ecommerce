package com.Controller;

import java.util.Date;
import java.util.List;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.dao.UserDao;
import com.model.User;

@Controller
public class RegisterController {

	
	@Autowired
	UserDao userDao;
	
	@RequestMapping(value="/",method=RequestMethod.POST)
	public String Register(@RequestParam("username")String username,
			                        @RequestParam("password")String password,
			                        @RequestParam("enabled")Boolean enabled,
			                        @RequestParam("role")String role,Model m)
	{
		
		
			
		
			
		 
		
		
		User user=new User();
		user.setUsername(username);
		user.setPassword(password);
		user.setEnabled(true);
		user.setRole(role);
		if(userDao.addUser(user));
		{
			List<User>listUser=userDao.retrieveUser();
			m.addAttribute("userList",listUser);
			

			try
			{
				Properties mailServerProperties;
				Session getMailSession;
				MimeMessage generateMailMessage;
			 
				
			 
				
			 
					// Step1
					System.out.println("\n 1st ===> setup Mail Server Properties..");
					mailServerProperties = System.getProperties();
					mailServerProperties.put("mail.smtp.port", "587");
					mailServerProperties.put("mail.smtp.auth", "true");
					mailServerProperties.put("mail.smtp.starttls.enable", "true");
					System.out.println("Mail Server Properties have been setup successfully..");
			 
					// Step2
					System.out.println("\n\n 2nd ===> get Mail Session..");
					getMailSession = Session.getDefaultInstance(mailServerProperties, null);
					generateMailMessage = new MimeMessage(getMailSession);
					//generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress("username"));
					generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress("test2@crunchify.com"));
					generateMailMessage.setSubject("Greetings from Crunchify..");
					String emailBody = "Test email by Crunchify.com JavaMail API example. " + "<br><br> Regards, <br>Crunchify Admin";
					generateMailMessage.setContent(emailBody, "text/html");
					System.out.println("Mail Session has been created successfully..");
			 
					// Step3
					System.out.println("\n\n 3rd ===> Get Session and Send mail");
					Transport transport = getMailSession.getTransport("smtp");
			 
					// Enter your correct gmail UserID and Password
					// if you have 2FA enabled then provide App Specific Password
					transport.connect("smtp.gmail.com", "donotreply.medioxypharm@gmail.com", "medioxy0139@pharm");
					transport.sendMessage(generateMailMessage, generateMailMessage.getAllRecipients());
					transport.close();
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
			
		return "index";
		
			}
		}
	
}
	
	
	

